{"version":3,"sources":["components/category-bar.js","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Categories","useState","category","setCategory","useEffect","axios","method","url","then","response","data","className","map","c","to","pathname","id","fromDashboard","name","NavBar","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAwBeA,MApBf,WAAuB,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,KAWpB,OARAC,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAK,wCACJC,MAAK,SAAAC,GACNN,EAAYM,EAASC,WAEtB,IAED,qBAAKC,UAAU,MAAf,SACGT,EAASU,KAAI,SAAAC,GAAC,OACb,cAAC,IAAD,CAAMF,UAAU,gBAAgBG,GAAI,CAACC,SAAS,eAAD,OAAiBF,EAAEG,IAAMC,eAAe,GAArF,SAA8FJ,EAAEK,aCEzFC,MAff,WACE,OACE,sBAAKR,UAAU,SAAf,UACE,mBAAGA,UAAU,gBAAgBS,KAAK,IAAlC,wDACA,sBAAKT,UAAU,gBAAf,UACE,mBAAGA,UAAU,gBAAgBS,KAAK,cAAlC,oEACA,qBAAKT,UAAU,YAAf,SACI,cAAC,EAAD,SAGN,mBAAGA,UAAU,gBAAgBS,KAAK,IAAlC,mECESC,MAXf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCGSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e8e4b5ea.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Categories() {\r\n  const [category, setCategory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"http://127.0.0.1:8000/api/category/\"\r\n    }).then(response => {\r\n      setCategory(response.data)\r\n    })\r\n  }, [])\r\n  return (\r\n    <div className=\"App\">\r\n      {category.map(c => (\r\n        <Link className=\"NavBarElement\" to={{pathname: `/categories/${c.id}`, fromDashboard: false}}>{c.name}</Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n","import Categories from './category-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <a className=\"NavBarElement\" href=\"/\">Главная</a>\r\n      <div className=\"NavBarElement\">\r\n        <a className=\"NavBarElement\" href=\"/categories\">Категории</a>\r\n        <div className=\"HiddenBar\">\r\n            <Categories />\r\n        </div>\r\n      </div>\r\n      <a className=\"NavBarElement\" href=\"0\">О проекте</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport NavBar from \"./components/navbar\";\nimport { BrowserRouter as Router,Switch, Route } from 'react-router-dom';\nimport Category from './components/category-page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      {/* <Switch>\n        <Route path='/category' exact component={Category} />\n      </Switch> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}